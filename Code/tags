!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
900	m_tecjointpdf.F90	/^   900 format(10(1x,e16.9))$/;"	l	subroutine:tecjointpdf	file:
IESv	m_ies.F90	/^integer, save :: IESv /;"	v	module:m_ies
aaprojection	m_aaprojection.F90	/^subroutine aaprojection(/;"	s	module:m_aaprojection
alphageo	m_esmda.F90	/^real,    save :: alphageo /;"	v	module:m_esmda
array	mod_xyqgrid.F90	/^real, allocatable :: array(/;"	v	module:mod_xyqgrid
avevar	m_avevar.F90	/^subroutine avevar(/;"	s	module:m_avevar
beta	m_func.F90	/^   real, save ::  beta /;"	v	module:m_func
cdd	mod_inistat.F90	/^   real, save :: cdd$/;"	v	module:mod_inistat
compute_cond_jointpdf	m_inipdfs.F90	/^subroutine compute_cond_jointpdf(/;"	s	module:m_inipdfs
compute_costfunction	m_inipdfs.F90	/^subroutine compute_costfunction(/;"	s	module:m_inipdfs
compute_likelihood	m_inipdfs.F90	/^subroutine compute_likelihood(/;"	s	module:m_inipdfs
compute_prior	m_inipdfs.F90	/^subroutine compute_prior(/;"	s	module:m_inipdfs
compute_uncond_jointpdf	m_inipdfs.F90	/^subroutine compute_uncond_jointpdf(/;"	s	module:m_inipdfs
cost	mod_xyqgrid.F90	/^real, save :: datum(ny), priorx(nx), priorq(nq), pdf(nx,ny), cost(/;"	v	module:mod_xyqgrid
costf	m_iescostf.F90	/^real function costf(/;"	f	module:m_iescostf
cov	m_cov.F90	/^subroutine cov(/;"	s	module:m_cov
cyyreg	m_cyyreg.F90	/^real function cyyreg(/;"	f	module:m_cyyreg
d	mod_inistat.F90	/^   real, save :: d /;"	v	module:mod_inistat
datum	mod_xyqgrid.F90	/^real, save :: datum(/;"	v	module:mod_xyqgrid
dcost	m_iescostf.F90	/^function dcost(/;"	f	module:m_iescostf
ddfunc	m_func.F90	/^function ddfunc(/;"	f	module:m_func
ddjfunc	m_iescostf.F90	/^function ddjfunc(/;"	f	module:m_iescostf
dfunc	m_func.F90	/^function dfunc(/;"	f	module:m_func
dq	mod_xyqgrid.F90	/^real, save :: dx,dy,dq$/;"	v	module:mod_xyqgrid
dqq	mod_xyqgrid.F90	/^real, save :: dqq$/;"	v	module:mod_xyqgrid
dx	mod_xyqgrid.F90	/^real, save :: dx,/;"	v	module:mod_xyqgrid
dxx	mod_xyqgrid.F90	/^real, save :: dxx$/;"	v	module:mod_xyqgrid
dy	mod_xyqgrid.F90	/^real, save :: dx,dy,/;"	v	module:mod_xyqgrid
dyy	mod_xyqgrid.F90	/^real, save :: dyy$/;"	v	module:mod_xyqgrid
enstein	m_enstein.F90	/^   subroutine enstein(/;"	s	module:m_enstein
es	m_es.F90	/^subroutine es(/;"	s	module:m_es
esamp	main.F90	/^   integer nrsamp,esamp$/;"	v	program:iterative_smoothers
esmda	m_esmda.F90	/^subroutine esmda(/;"	s	module:m_esmda
func	m_func.F90	/^real funct/;"	f	module:m_func
funcmode	m_func.F90	/^   integer, save ::  funcmode /;"	v	module:m_func
gamma_enstein	m_enstein.F90	/^real,    save :: gamma_enstein /;"	v	module:m_enstein
gamma_ies	m_ies.F90	/^real,    save :: gamma_ies /;"	v	module:m_ies
gamma_sies	m_sies.F90	/^real,    save :: gamma_sies /;"	v	module:m_sies
getalpha	m_getalpha.F90	/^real function getalpha(/;"	f	module:m_getalpha
getcaseid	m_getcaseid.F90	/^subroutine getcaseid(/;"	s	module:m_getcaseid
ies	m_ies.F90	/^   subroutine ies(/;"	s	module:m_ies
ies_eps	m_ies.F90	/^real, save :: ies_eps=/;"	v	module:m_ies
iniens	m_iniens.F90	/^subroutine iniens(/;"	s	module:m_iniens
integrals	m_integrals.F90	/^subroutine integrals(/;"	s	module:m_integrals
iterative_smoothers	main.F90	/^program iterative_smoothers$/;"	p
jointpdf	m_jointpdf.F90	/^   subroutine jointpdf(/;"	s	module:m_jointpdf
lactivepdf	m_jointpdf.F90	/^logical, save :: lactivepdf$/;"	v	module:m_jointpdf
lcyyreg	m_cyyreg.F90	/^logical, save :: lcyyreg$/;"	v	module:m_cyyreg
lenstein	m_enstein.F90	/^logical, save :: lenstein /;"	v	module:m_enstein
les	m_es.F90	/^logical, save :: les=/;"	v	module:m_es
lesadjoint	m_es.F90	/^logical, save :: lesadjoint=/;"	v	module:m_es
lesmdaadjoint	m_esmda.F90	/^logical, save :: lesmdaadjoint=/;"	v	module:m_esmda
lies	m_ies.F90	/^logical, save :: lies /;"	v	module:m_ies
liesadjoint	m_ies.F90	/^logical, save :: liesadjoint=/;"	v	module:m_ies
lmda	m_esmda.F90	/^logical, save :: lmda /;"	v	module:m_esmda
lsies	m_sies.F90	/^logical, save :: lsies /;"	v	module:m_sies
lsteinadjoint	m_enstein.F90	/^logical, save :: lsteinadjoint=/;"	v	module:m_enstein
m_aaprojection	m_aaprojection.F90	/^module m_aaprojection$/;"	m
m_avevar	m_avevar.F90	/^module m_avevar$/;"	m
m_cov	m_cov.F90	/^module m_cov$/;"	m
m_cyyreg	m_cyyreg.F90	/^module m_cyyreg$/;"	m
m_enstein	m_enstein.F90	/^module m_enstein$/;"	m
m_es	m_es.F90	/^module m_es$/;"	m
m_esmda	m_esmda.F90	/^module m_esmda$/;"	m
m_func	m_func.F90	/^module m_func$/;"	m
m_getalpha	m_getalpha.F90	/^module m_getalpha$/;"	m
m_getcaseid	m_getcaseid.F90	/^module m_getcaseid$/;"	m
m_ies	m_ies.F90	/^module m_ies$/;"	m
m_iescostf	m_iescostf.F90	/^module m_iescostf$/;"	m
m_iniens	m_iniens.F90	/^module m_iniens$/;"	m
m_inipdfs	m_inipdfs.F90	/^module m_inipdfs$/;"	m
m_integrals	m_integrals.F90	/^module m_integrals /;"	m
m_jointpdf	m_jointpdf.F90	/^module m_jointpdf$/;"	m
m_marginalpdf	m_marginalpdf.F90	/^module m_marginalpdf$/;"	m
m_moments	m_moments.F90	/^module m_moments$/;"	m
m_normal	m_normal.F90	/^module m_normal$/;"	m
m_omegafact	m_omegafact.F90	/^module m_omegafact$/;"	m
m_printcostf	m_printcostf.F90	/^module m_printcostf$/;"	m
m_pseudoinv	m_pseudoinv.F90	/^module m_pseudoinv$/;"	m
m_pseudoinv2	m_pseudoinv2.F90	/^module m_pseudoinv2$/;"	m
m_set_random_seed2	m_set_random_seed2.F90	/^module m_set_random_seed2$/;"	m
m_sies	m_sies.F90	/^module m_sies$/;"	m
m_steinkern	m_steinkern.F90	/^module m_steinkern$/;"	m
m_teccostens	m_teccostens.F90	/^module m_teccostens$/;"	m
m_tecfunc	m_tecfunc.F90	/^module m_tecfunc$/;"	m
m_tecjointpdf	m_tecjointpdf.F90	/^module m_tecjointpdf$/;"	m
m_tecmargpdf	m_tecmargpdf.F90	/^module m_tecmargpdf$/;"	m
m_tecsampini	m_tecsampini.F90	/^module m_tecsampini$/;"	m
m_tecstat	m_tecstat.F90	/^   module m_tecstat$/;"	m
m_tecstatIES	m_tecstatIES.F90	/^   module m_tecstatIES$/;"	m
marginalpdf	m_marginalpdf.F90	/^subroutine marginalpdf(/;"	s	module:m_marginalpdf
margq	mod_xyqgrid.F90	/^real, save :: margx(nx), margy(ny), margq(/;"	v	module:mod_xyqgrid
margx	mod_xyqgrid.F90	/^real, save :: margx(/;"	v	module:mod_xyqgrid
margy	mod_xyqgrid.F90	/^real, save :: margx(nx), margy(/;"	v	module:mod_xyqgrid
maxensteinit	m_enstein.F90	/^integer, save :: maxensteinit /;"	v	module:m_enstein
maxiesit	m_ies.F90	/^integer, save :: maxiesit /;"	v	module:m_ies
maxsiesit	m_sies.F90	/^integer, save :: maxsiesit /;"	v	module:m_sies
method	main.F90	/^   character(len=7) :: method(/;"	v	program:iterative_smoothers
mod_inistat	mod_inistat.F90	/^module mod_inistat$/;"	m
mod_xyqgrid	mod_xyqgrid.F90	/^module mod_xyqgrid$/;"	m
moments	m_moments.F90	/^subroutine moments(/;"	s	module:m_moments
ndim	m_enstein.F90	/^integer, parameter :: ndim=/;"	v	module:m_enstein
ndim	m_sies.F90	/^integer, parameter :: ndim=/;"	v	module:m_sies
nmda	m_esmda.F90	/^integer, save :: nmda /;"	v	module:m_esmda
normal	m_normal.F90	/^real function normal(/;"	f	module:m_normal
nq	mod_xyqgrid.F90	/^integer, parameter :: nq=/;"	v	module:mod_xyqgrid
nqq	mod_xyqgrid.F90	/^integer, parameter :: nqq=/;"	v	module:mod_xyqgrid
nrits	m_printcostf.F90	/^integer, parameter :: nrits=/;"	v	module:m_printcostf
nrmethods	main.F90	/^   integer, parameter :: nrmethods=/;"	v	program:iterative_smoothers
nrobs	m_sies.F90	/^integer, parameter :: nrobs=/;"	v	module:m_sies
nrsamp	main.F90	/^   integer nrsamp,/;"	v	program:iterative_smoothers
nx	mod_xyqgrid.F90	/^integer, parameter :: nx=/;"	v	module:mod_xyqgrid
nxx	mod_xyqgrid.F90	/^integer, parameter :: nxx=/;"	v	module:mod_xyqgrid
ny	mod_xyqgrid.F90	/^integer, parameter :: ny=/;"	v	module:mod_xyqgrid
nyy	mod_xyqgrid.F90	/^integer, parameter :: nyy=/;"	v	module:mod_xyqgrid
omegafact	m_omegafact.F90	/^subroutine omegafact(/;"	s	module:m_omegafact
pdf	mod_xyqgrid.F90	/^real, save :: datum(ny), priorx(nx), priorq(nq), pdf(/;"	v	module:mod_xyqgrid
pi	m_func.F90	/^   real, parameter :: pi=/;"	v	module:m_func
printcostf	m_printcostf.F90	/^subroutine printcostf(/;"	s	module:m_printcostf
priorq	mod_xyqgrid.F90	/^real, save :: datum(ny), priorx(nx), priorq(/;"	v	module:mod_xyqgrid
priorx	mod_xyqgrid.F90	/^real, save :: datum(ny), priorx(/;"	v	module:mod_xyqgrid
pseudoinv	m_pseudoinv.F90	/^subroutine pseudoinv(/;"	s	module:m_pseudoinv
pseudoinv2	m_pseudoinv2.F90	/^subroutine pseudoinv2(/;"	s	module:m_pseudoinv2
q	mod_xyqgrid.F90	/^real, save :: x(nx), y(ny), q(/;"	v	module:mod_xyqgrid
qa	mod_xyqgrid.F90	/^real, save :: xa,xb,ya,yb,qa,/;"	v	module:mod_xyqgrid
qb	mod_xyqgrid.F90	/^real, save :: xa,xb,ya,yb,qa,qb /;"	v	module:mod_xyqgrid
qq	mod_xyqgrid.F90	/^real, save :: xx(nxx), yy(nyy), qq(/;"	v	module:mod_xyqgrid
set_random_seed2	m_set_random_seed2.F90	/^subroutine set_random_seed2$/;"	s	module:m_set_random_seed2
sies	m_sies.F90	/^   subroutine sies(/;"	s	module:m_sies
sies_eps	m_sies.F90	/^real, save :: sies_eps=/;"	v	module:m_sies
siga	mod_inistat.F90	/^   real, save :: siga /;"	v	module:mod_inistat
sigo	mod_inistat.F90	/^   real, save :: sigo /;"	v	module:mod_inistat
sigq	mod_inistat.F90	/^   real, parameter :: sigq=/;"	v	module:mod_inistat
sigw	mod_inistat.F90	/^   real, save :: sigw /;"	v	module:mod_inistat
steinkern	m_steinkern.F90	/^   real function steinkern(/;"	f	module:m_steinkern
teccostens	m_teccostens.F90	/^subroutine teccostens(/;"	s	module:m_teccostens
tecfunc	m_tecfunc.F90	/^subroutine tecfunc(/;"	s	module:m_tecfunc
tecjointpdf	m_tecjointpdf.F90	/^   subroutine tecjointpdf(/;"	s	module:m_tecjointpdf
tecmargpdf	m_tecmargpdf.F90	/^subroutine tecmargpdf(/;"	s	module:m_tecmargpdf
tecsampini	m_tecsampini.F90	/^subroutine tecsampini(/;"	s	module:m_tecsampini
tecstat	m_tecstat.F90	/^   subroutine tecstat(/;"	s	module:m_tecstat
tecstatIES	m_tecstatIES.F90	/^   subroutine tecstatIES(/;"	s	module:m_tecstatIES
x	mod_xyqgrid.F90	/^real, save :: x(/;"	v	module:mod_xyqgrid
x0	mod_inistat.F90	/^   real, save :: x0 /;"	v	module:mod_inistat
xa	mod_xyqgrid.F90	/^real, save :: xa,/;"	v	module:mod_xyqgrid
xb	mod_xyqgrid.F90	/^real, save :: xa,xb,/;"	v	module:mod_xyqgrid
xx	mod_xyqgrid.F90	/^real, save :: xx(/;"	v	module:mod_xyqgrid
xyqgrid	mod_xyqgrid.F90	/^subroutine xyqgrid(/;"	s	module:mod_xyqgrid
y	mod_xyqgrid.F90	/^real, save :: x(nx), y(/;"	v	module:mod_xyqgrid
ya	mod_xyqgrid.F90	/^real, save :: xa,xb,ya,/;"	v	module:mod_xyqgrid
yb	mod_xyqgrid.F90	/^real, save :: xa,xb,ya,yb,/;"	v	module:mod_xyqgrid
yy	mod_xyqgrid.F90	/^real, save :: xx(nxx), yy(/;"	v	module:mod_xyqgrid
